var searchIndex = JSON.parse('{\
"linkset":{"doc":"","t":"DDILLLLLLLLLLLLLLLOOLLLLOLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Entry","Linkset","LinksetOf","as_mut","as_mut","as_mut_ptr","as_mut_slice","as_ptr","as_ref","as_ref","as_slice","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cmp","declare","declare_weak","deref","deref","deref_mut","deref_mut","entry","eq","fmt","fmt","from","from","from_raw_parts","ge","gt","hash","into","into","into_iter","is_empty","le","len","lt","new","partial_cmp","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"linkset"],[50,"core::cmp"],[51,"core::cmp"],[52,"core::fmt"],[53,"core::hash"],[54,"alloc::string"],[55,"core::result"],[56,"core::any"]],"d":["","","Types which wrap a <code>Linkset&lt;T&gt;</code>","","","","","","","","","","","","","","","","Declare a linker set","","","","","","Declare an entry in a linker set","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a <code>Linkset</code> from its raw parts","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,2,2,2,1,1,2,1,1,2,1,1,2,1,0,0,1,2,1,2,0,1,1,1,1,2,2,1,1,1,1,2,2,2,1,2,1,1,1,1,1,2,1,2,1,2],"f":[0,0,0,[[[1,[-1]]],-1,[]],[[[1,[-1]]],-1,[]],[[[2,[-1]]],1,[]],[[[2,[-1]]],[[3,[[1,[-1]]]]],[]],[[[2,[-1]]],1,[]],[[[1,[-1]]],-1,[]],[[[1,[-1]]],-1,[]],[[[2,[-1]]],[[3,[[1,[-1]]]]],[]],[-1,-2,[],[]],[[[1,[-1]]],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],-1,[]],[-1,-2,[],[]],[[[1,[-1]],[1,[-1]]],4,5],0,0,[[[1,[-1]]],[],[]],[[[2,[-1]]],[],[]],[[[1,[-1]]],[],[]],[[[2,[-1]]],[],[]],0,[[[1,[-1]],[1,[-1]]],6,7],[[[1,[-1]],8],9,10],[[[1,[-1]],8],9,11],[-1,-1,[]],[-1,-1,[]],[[1,1],[[2,[-1]]],[]],[[[1,[-1]],[1,[-1]]],6,12],[[[1,[-1]],[1,[-1]]],6,12],[[[1,[-1]],-2],13,14,15],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[-1]]],[],[]],[[[2,[-1]]],6,[]],[[[1,[-1]],[1,[-1]]],6,12],[[[2,[-1]]],16,[]],[[[1,[-1]],[1,[-1]]],6,12],[-1,[[1,[-1]]],[]],[[[1,[-1]],[1,[-1]]],[[17,[4]]],12],[-1,18,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]]],"c":[],"p":[[3,"Entry",0],[3,"Linkset",0],[15,"slice"],[4,"Ordering",50],[8,"Ord",50],[15,"bool"],[8,"PartialEq",50],[3,"Formatter",51],[6,"Result",51],[8,"Display",51],[8,"Debug",51],[8,"PartialOrd",50],[15,"tuple"],[8,"Hash",52],[8,"Hasher",52],[15,"usize"],[4,"Option",53],[3,"String",54],[4,"Result",55],[3,"TypeId",56]],"b":[[3,"impl-AsMut%3CT%3E-for-Entry%3CT%3E"],[4,"impl-Entry%3CT%3E"],[8,"impl-Entry%3CT%3E"],[9,"impl-AsRef%3CT%3E-for-Entry%3CT%3E"],[26,"impl-Display-for-Entry%3CT%3E"],[27,"impl-Debug-for-Entry%3CT%3E"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
